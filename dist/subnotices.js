// Generated by CoffeeScript 1.10.0

/**
 * The library I authored for use as subnotices/alerts sitewide (frontend/backend)
 */

(function() {
  (function($) {
    var Subnotice;
    this.subnotify = function($type, $text, time) {
      var markup, subnoticeObject;
      markup = "<div class=\"subnotice subnotice_" + $type + "\"> <div class=\"subnotice-text\">" + $text + "</div> <div class=\"subnotice-close\"></div> </div>";
      subnoticeObject = new Subnotice(markup);
      if (time === void 0) {
        time = 10000;
      }
      subnoticeObject.destroy(time);
      return subnoticeObject;
    };
    Subnotice = function(markup) {
      this.subnoticeEl = $(markup);
      this.subnoticeEl.data('Subnotice', this);
      this.wrapperEl = $('.subnotices');
      this.isActive = true;
      this.append();
      this.attachEvents();
      return this;
    };
    Subnotice.prototype.append = function() {
      var subnoticeObject;
      subnoticeObject = this;
      this.subnoticeEl.appendTo(this.wrapperEl);
      return setTimeout(function() {
        return subnoticeObject.reveal();
      }, 200);
    };
    Subnotice.prototype.reveal = function() {
      return this.subnoticeEl.addClass('show');
    };
    Subnotice.prototype.attachEvents = function() {
      var subnoticeObject;
      subnoticeObject = this;
      return this.subnoticeEl.children('.subnotice-close').on('click', function() {
        return subnoticeObject.destroy(0);
      });
    };
    Subnotice.prototype.destroy = function(time) {
      var el, subnoticeObject;
      subnoticeObject = this;
      if (time !== false) {
        el = this.subnoticeEl;
        return setTimeout(function() {
          el.removeClass('show');
          return setTimeout(function() {
            el.remove();
            return subnoticeObject.isActive = false;
          }, 1000);
        }, time);
      }
    };
    $(window).on('click', '.subnotice-close', function() {
      var subnoticeObject;
      subnoticeObject = $(this).parent().data('Subnotice');
      return subnoticeObject.destroy(0);
    });
  })(jQuery);

}).call(this);
